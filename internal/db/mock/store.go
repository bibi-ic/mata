// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bibi-ic/mata/internal/db/sqlc (interfaces: Store)
//
// Generated by this command:
//
//	mockgen -package mockdb -destination internal/db/mock/store.go github.com/bibi-ic/mata/internal/db/sqlc Store
//
// Package mockdb is a generated GoMock package.
package mockdb

import (
	context "context"
	reflect "reflect"

	db "github.com/bibi-ic/mata/internal/db/sqlc"
	gomock "go.uber.org/mock/gomock"
)

// MockStore is a mock of Store interface.
type MockStore struct {
	ctrl     *gomock.Controller
	recorder *MockStoreMockRecorder
}

// MockStoreMockRecorder is the mock recorder for MockStore.
type MockStoreMockRecorder struct {
	mock *MockStore
}

// NewMockStore creates a new mock instance.
func NewMockStore(ctrl *gomock.Controller) *MockStore {
	mock := &MockStore{ctrl: ctrl}
	mock.recorder = &MockStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStore) EXPECT() *MockStoreMockRecorder {
	return m.recorder
}

// CreateAPI mocks base method.
func (m *MockStore) CreateAPI(arg0 context.Context, arg1 string) (db.Api, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAPI", arg0, arg1)
	ret0, _ := ret[0].(db.Api)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAPI indicates an expected call of CreateAPI.
func (mr *MockStoreMockRecorder) CreateAPI(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAPI", reflect.TypeOf((*MockStore)(nil).CreateAPI), arg0, arg1)
}

// GetAPI mocks base method.
func (m *MockStore) GetAPI(arg0 context.Context) (db.Api, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAPI", arg0)
	ret0, _ := ret[0].(db.Api)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAPI indicates an expected call of GetAPI.
func (mr *MockStoreMockRecorder) GetAPI(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAPI", reflect.TypeOf((*MockStore)(nil).GetAPI), arg0)
}

// GetAPITx mocks base method.
func (m *MockStore) GetAPITx(arg0 context.Context) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAPITx", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAPITx indicates an expected call of GetAPITx.
func (mr *MockStoreMockRecorder) GetAPITx(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAPITx", reflect.TypeOf((*MockStore)(nil).GetAPITx), arg0)
}

// UpdateAPIUsageCount mocks base method.
func (m *MockStore) UpdateAPIUsageCount(arg0 context.Context, arg1 db.UpdateAPIUsageCountParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAPIUsageCount", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateAPIUsageCount indicates an expected call of UpdateAPIUsageCount.
func (mr *MockStoreMockRecorder) UpdateAPIUsageCount(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAPIUsageCount", reflect.TypeOf((*MockStore)(nil).UpdateAPIUsageCount), arg0, arg1)
}
